#ifndef Calculator_H
#define Calculator_H
/*******************************************************/

const int NumOfMathFunc = 13;

const int MaxLengthFunc = 10;


enum EKindOfToken
{
    EMPTY,
    NUMBER,
    FUNCTION,
    BRACKET,
    VAR
};

struct Token
{
    char* Symbols;
    double Number;
    EKindOfToken KindOfToken;
};

struct Var
{
    char* Name;
    double Data;
};

extern const char* MathFunctionTable [ NumOfMathFunc ];

/**************************************************************
*
*
*
**************************************************************/
Token* StringToToken ( char* Expression );
/**************************************************************
*
*
*
**************************************************************/
int IsAlpha ( char Symbol );
/**************************************************************
*
*
*
**************************************************************/
int IsSpace ( char Symbol );
/**************************************************************
*
*
*
**************************************************************/
int IsDigit ( char Symbol );
/**************************************************************
*
*
*
**************************************************************/
int IsEnd ( char Symbol );
/**************************************************************
*
*
*
**************************************************************/
int IsArOper ( char Symbol );
/**************************************************************
*
*
*
**************************************************************/
int IsMathFunction ( char* String );
/**************************************************************
*
*
*
**************************************************************/
int ExpressionDump ( Token* Express );
/**************************************************************
*
*
*
**************************************************************/
int SyntaxCheck ( Token* Express );
/**************************************************************
*
*
*
**************************************************************/
double CalcExpress ( Token* Express );
    ///******* Set of rules ************
    double CallPlus  ( );/// +
    double CallMinus ( );/// -
    double CallMul   ( );/// *
    double CallDiv   ( );/// /
    double CallSin   ( );/// Sin
    double CallCos   ( );/// Cos
    double CallDegr  ( );/// ^
    double CallBrac  ( );/// ()
    double CallNum   ( );/// n
    ///*********************************
/**************************************************************
*
*
*
**************************************************************/
/**************************************************************
*
*
*
**************************************************************/
/**************************************************************
*
*
*
**************************************************************/
/**************************************************************
*
*
*
**************************************************************/
/*************************************************************/


#endif // Calculator_H
